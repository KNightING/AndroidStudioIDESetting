<templateSet group="Flutter">
  <template name="showDialog" value="showDialog&lt;void&gt;(&#10;context: $context$,&#10;barrierDismissible: $dismiss$, // false = user must tap button, true = tap outside dialog&#10;builder: (BuildContext dialogContext){&#10;return AlertDialog(&#10;title: Text('$title$'),&#10;content: Text('$content$'),&#10;actions: &lt;Widget&gt;[&#10;FlatButton(&#10;child: Text('$buttonText$'),&#10;onPressed: () {&#10;Navigator.of(dialogContext).pop(); // Dismiss alert dialog&#10;},&#10;),&#10;],&#10;);&#10;},&#10;);" description="New AlertDialog" toReformat="true" toShortenFQNames="true">
    <variable name="context" expression="&quot;context&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="dismiss" expression="&quot;barrierDismissible&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="title" expression="&quot;title&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="content" expression="&quot;dialogBody&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="buttonText" expression="&quot;buttonText&quot;" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="reassemble" value="@override &#10; void reassemble(){ &#10; super.reassemble(); &#10; $body$ &#10;}&#10;" description="Reassemble" toReformat="true" toShortenFQNames="true">
    <variable name="body" expression="$body$" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="didChangeD" value="@override &#10; void didChangeDependencies(){ &#10; super.didChangeDependencies(); &#10; $body$ &#10;}&#10;" description="didChangeDependencies" toReformat="true" toShortenFQNames="true">
    <variable name="body" expression="$body$" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="didUpdateW" value="@override &#10; void didUpdateWidget ($Type$ oldWidget) { &#10; super.didChangeDependencies(); &#10; $body$ &#10;}&#10;" description="didUpdateWidget" toReformat="true" toShortenFQNames="true">
    <variable name="body" expression="$body$" defaultValue="" alwaysStopAt="true" />
    <variable name="type" expression="$Type$" defaultValue="" alwaysStopAt="true" />
  </template>
</templateSet>